// TODO: Need to constrain to max-width of 8em but it will affect animation...
$menu-button-width: 56vw;
$menu-button-height: 8vh;
$menu-border-width: 0.5vh;
$inner-circle-diameter: $menu-button-height/2;

.dashboard {
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: space-evenly;
  box-sizing: border-box;
  min-height: 100vh;
  margin: auto;
}

.change {
  transform: rotate(90deg) translate(100px) rotate(-90deg);
}

.menu-button {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  white-space: nowrap;
  border-radius: 1000px;
  height: $menu-button-height;
  width: $menu-button-width;
  font-size: $menu-button-height/2;
  color: white;
  background-color: maroon;
  border: solid gold $menu-border-width;
  overflow: hidden;
  cursor: pointer;
  z-index: 1;
  box-sizing: border-box;
  user-select: none;
}

.menu-button::before {
  content: "";
  color: black;
  height: $inner-circle-diameter;
  width: $inner-circle-diameter;
  background-color: gold;
  border-radius: 100%;
  position: absolute;
  display: inline-block;
  box-shadow: inset 0 0 0.5em white;
  left: 1.5vh;
  pointer-events: none;
  margin: 0;
  padding: 0;
  transition: transform 750ms;
  z-index: 1;
}

.menu-button span {
  transition: opacity 750ms;
  opacity: 1;
}

@keyframes roll {
  100% {
    width: $menu-button-height;
    letter-spacing: $menu-button-height * 1.5;
  }
}

@keyframes unroll {
  0% {
    width: $menu-button-height;
    letter-spacing: $menu-button-height * 1.5;
  }

  100% {
    width: $menu-button-width;
    letter-spacing: 0;
  }
}

@keyframes expand {
  0% {
    position: absolute;
    width: $inner-circle-diameter;
  }

  100% {
    position: absolute;
    border-radius: 0;
    transform: scale(100);
    background-color: teal;
  }
}

@keyframes shrink {
  0% {
    position: absolute;
    border-radius: 0;
    transform: scale(100);
    background-color: teal;
  }

  100% {
    position: absolute;
    width: $inner-circle-diameter;
    height: $inner-circle-diameter;
    transform: scale(1);
    background-color: gold;
  }
}

@keyframes hide {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes reveal {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes unwrap {
  0% {
    overflow: hidden;
  }

  100% {
    overflow: visible;
  }
}

@keyframes wrapp {
  0% {
    overflow: visible;
  }

  100% {
    overflow: hidden;
  }
}

.full-roll {
  animation-name: roll, unroll;
  animation-duration: 750ms, 750ms;
  animation-delay: 0ms, 750ms;
  animation-fill-mode: forwards, forwards;
}

.modal-overlay {
  animation-name: roll, unwrap;
  animation-duration: 750ms, 0ms;
  animation-delay: 0ms, 750ms;
  animation-fill-mode: forwards, forwards;
}

.modal-overlay::before {
  animation-name: expand;
  animation-duration: 750ms;
  animation-delay: 750ms;
  animation-fill-mode: forwards;
}

.modal-overlay span {
  animation-name: hide;
  animation-duration: 0ms;
  animation-delay: 750ms;
  animation-fill-mode: forwards;
}

.modal-retract {
  width: $menu-button-height;
  letter-spacing: $menu-button-height * 1.5;
  overflow: visible;
  animation-name: wrapp, unroll;
  animation-duration: 0s, 750ms;
  animation-delay: 750ms;
  animation-fill-mode: forwards;
}

.modal-retract:before {
  position: absolute;
  animation-name: shrink;
  animation-duration: 750ms;
  animation-delay: 0;
  animation-fill-mode: forwards;
}

.modal-retract span {
  opacity: 0;
  animation-name: reveal;
  animation-duration: 0ms;
  animation-delay: 750ms;
  animation-fill-mode: forwards;
}

#about {
  z-index: 5;
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  font-size: 4vh;
  visibility: hidden;
  opacity: 0;
  transition: opacity 500ms;
}

.close-button {
  position: fixed;
  top: 2vw;
  right: 2vw;
  width: 5vh;
  height: 5vh;
  border-radius: 1000px;
  background-color: white;
}

.button-container {
  display: flex;
  justify-content: center;
}

.ring {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  width: $menu-button-height;
  height: $menu-button-height;
  border: solid gold $menu-border-width;
  border-radius: 50%;
  font-size: 4vh;
  transition: transform 750ms;
}

.expand-options {
  transition: width 750ms, letter-spacing 750ms;
}

.expand-options:active {
  width: $menu-button-height;
  letter-spacing: $menu-button-height * 1.5;
}

.expand-options:active::before {
  transform: scale(2);
}

.expand-options.expand-complete {
  transition: width 750ms ease 750ms, letter-spacing 750ms ease 750ms;
}

.expand-options.expand-complete::before {
  transition: transform 1500ms;
}

.expand-options:active span {
  opacity: 0;
}

.visible {
  visibility: visible !important;
  opacity: 1 !important;
}

.disabled {
  pointer-events: none;
}

.stacked {
  position: absolute;
}

/* Small devices (portrait tablets and large phones, 600px and up) */
@media only screen and (min-width: 600px) {
}

/* Medium devices (landscape tablets, 768px and up) */
@media only screen and (min-width: 768px) {
}

/* Large devices (laptops/desktops, 992px and up) */
@media only screen and (min-width: 992px) {
}

/* Extra large devices (large laptops and desktops, 1200px and up) */
@media only screen and (min-width: 1200px) {
}
