@use "common";

// $back-item-border-width: 2px;
$back-item-border-width: 0.5vw;
// $match-item-size: 60px;
$match-item-size: 15vw;
// $match-item-border-radius: 25px;
$match-item-border-radius: 6.25vw;
// $row-gap: 12px;
$row-gap: 3vw;
// $board-margin-top: 16px;
$board-margin-top: 4vw;
$icon-size: $match-item-size/2;

svg {
  color: white;
}

.board {
  display: grid;
  grid-auto-rows: min-content;
  justify-items: center;
  justify-content: space-evenly;
  align-items: center;
  align-content: space-evenly;
  list-style: none;
  padding: 0;
  margin: auto;
  height: 65vh;
}

.match-item-container {
  display: grid;
  grid-column: span 1;
  position: relative;
  width: $match-item-size;
  height: $match-item-size;
  @include common.prefix-property(transform-style, preserve-3d);
  justify-items: center;
  @include common.prefix-property(transition, transform 0.6s);
  cursor: pointer;
  background-color: turquoise;
  border-radius: $match-item-border-radius;
}

.match-item,
.back-item {
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  width: 100%;
  height: 100%;
  @include common.prefix-property(backface-visibility, hidden);
  border-radius: inherit;
  box-sizing: border-box;
  font-size: inherit;
}

.back-item {
  background-color: teal;
  @include common.prefix-property(transform, rotateY(180deg));
  border: solid gold $back-item-border-width;
}

.flipped {
  @include common.prefix-property(transition, transform 750ms);
  @include common.prefix-property(transform, rotateY(180deg));
}

.flip-back {
  @include common.prefix-property(transform, rotate(0deg));
}

.correct-match {
  cursor: default;
  background: green;
  @include common.prefix-property(animation-name, rubberBand);
  @include common.prefix-property(animation-duration, 0.75s);
  // TODO: do i need !important...?
  // -webkit-backface-visibility: visible !important;
  // backface-visibility: visible !important;
  @include common.prefix-property(backface-visibility, visible);
}

.incorrect-match {
  @include common.prefix-property(animation-name, pulse);
  @include common.prefix-property(animation-duration, 1.35s);
  @include common.prefix-property(animation-fill-mode, none);
  background: #e2043b;
}

.disabled {
  pointer-events: none;
}

@include common.keyframes-animation(flip) {
  from {
    @include common.prefix-property(transform, rotateY(0deg));
  }
  to {
    @include common.prefix-property(transform, rotateY(180deg));
  }
}

@include common.keyframes-animation(pulse) {
  0% {
    @include common.prefix-property(transform, scale3d(1, 1, 1));
  }

  25% {
    @include common.prefix-property(transform, scale3d(1.2, 1.2, 1.2));
  }

  75% {
    @include common.prefix-property(transform, scale3d(1, 1, 1));
  }

  100% {
    @include common.prefix-property(transform, rotateY(180deg));
    @include common.prefix-property(transition, transform 2s);
  }
}

@include common.keyframes-animation(rubberBand) {
  from {
    @include common.prefix-property(transform, scale3d(1, 1, 1));
  }

  30% {
    @include common.prefix-property(transform, scale3d(1.25, 0.75, 1));
  }

  40% {
    @include common.prefix-property(transform, scale3d(0.75, 1.25, 1));
  }

  50% {
    @include common.prefix-property(transform, scale3d(1.15, 0.85, 1));
  }

  65% {
    @include common.prefix-property(transform, scale3d(0.95, 1.05, 1));
  }

  75% {
    @include common.prefix-property(transform, scale3d(1.05, 0.95, 1));
  }

  to {
    @include common.prefix-property(transform, scale3d(1, 1, 1));
  }
}

/* Small devices (portrait tablets and large phones, 600px and up) */
@media only screen and (min-width: 600px) {
}

/* Medium devices (landscape tablets, 768px and up) */
@media only screen and (min-width: 768px) {
}

/* Large devices (laptops/desktops, 992px and up) */
@media only screen and (min-width: 992px) {
}

/* Extra large devices (large laptops and desktops, 1200px and up) */
@media only screen and (min-width: 1200px) {
  .board {
    max-width: 1200px;
  }
}

$screen-sizes: 600px 768px 992px 1200px;
$multipliers: 1.5 2 2.5 3;

// @for $i from 1 through 4 {
//   @media only screen and (min-width: nth($screen-sizes, $i)) {
//     .board {
//       row-gap: $row-gap * nth($multipliers, $i);
//       margin-top: $board-margin-top * nth($multipliers, $i);
//     }

//     .match-item-container {
//       width: $match-item-size * nth($multipliers, $i);
//       height: $match-item-size * nth($multipliers, $i);
//       border-radius: $match-item-border-radius * nth($multipliers, $i);
//       box-sizing: border-box;
//     }

//     .match-item,
//     .back-item {
//       border-radius: $match-item-border-radius * nth($multipliers, $i);
//       font-size: $icon-size * nth($multipliers, $i);
//     }

//     .back-item {
//       border-width: $back-item-border-width * nth($multipliers, $i);
//     }
//   }
// }
