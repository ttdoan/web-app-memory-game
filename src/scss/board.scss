$match-item-size: 60px;
$match-item-border-radius: 25px;
$row-gap: 10px;
$board-margin-top: 16px;
$icon-size: $match-item-size/2;

.board {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  row-gap: $row-gap;
  justify-items: center;
  list-style: none;
  padding: 0;
  margin: auto;
  margin-top: $board-margin-top;
  justify-items: center;
}

.match-item-container {
  display: grid;
  grid-column: span 1;
  position: relative;
  width: $match-item-size;
  height: $match-item-size;
  transform-style: preserve-3d;
  justify-items: center;
  transition: transform 0.6s;
  cursor: pointer;
  background-color: teal;
  border-radius: $match-item-border-radius;
}

.match-item,
.back-item {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  -moz-backface-visibility: hidden;
  backface-visibility: hidden;
  border-radius: $match-item-border-radius;
}

.match-item {
  font-size: $icon-size;
}

.back-item {
  background-color: yellow;
  color: yellow;
  border: solid orange;
  transform: rotateY(180deg);
}

.flipped {
  transform: rotateY(180deg);
}

.flip-back {
  transform: rotate(0deg);
}

.correct-match {
  cursor: default;
  background: #e5f720;
  /* font-size: 33px; */
  animation-name: rubberBand;
  -webkit-backface-visibility: visible !important;
  backface-visibility: visible !important;
  animation-duration: 0.75s;
}

.incorrect-match {
  animation-name: pulse;
  /* animation-duration: 0.75s; */
  animation-duration: 1.35s;
  background: #e2043b;
  animation-fill-mode: none;
}

.disabled {
  pointer-events: none;
}

@keyframes flip {
  from {
    transform: rotateY(0deg);
  }
  to {
    transform: rotateY(180deg);
  }
}

@keyframes pulse {
  0% {
    transform: scale3d(1, 1, 1);
  }

  25% {
    transform: scale3d(1.2, 1.2, 1.2);
  }

  75% {
    transform: scale3d(1, 1, 1);
  }

  100% {
    transform: rotateY(180deg);
    transition: transform 2s;
  }
}

@keyframes rubberBand {
  from {
    transform: scale3d(1, 1, 1);
  }

  30% {
    transform: scale3d(1.25, 0.75, 1);
  }

  40% {
    transform: scale3d(0.75, 1.25, 1);
  }

  50% {
    transform: scale3d(1.15, 0.85, 1);
  }

  65% {
    transform: scale3d(0.95, 1.05, 1);
  }

  75% {
    transform: scale3d(1.05, 0.95, 1);
  }

  to {
    transform: scale3d(1, 1, 1);
  }
}

/* Small devices (portrait tablets and large phones, 600px and up) */
@media only screen and (min-width: 600px) {
  .board {
    justify-items: center;
  }

  .match-item-container {
    width: $match-item-size * 1.5;
    height: $match-item-size * 1.5;
    border-radius: $match-item-border-radius * 1.5;
  }

  .match-item,
  .back-item {
    border-radius: $match-item-border-radius * 1.5;
  }

  .match-item {
    font-size: $icon-size * 1.5;
  }
}

/* Medium devices (landscape tablets, 768px and up) */
@media only screen and (min-width: 768px) {
  .match-item-container {
    width: $match-item-size * 2;
    height: $match-item-size * 2;
    border-radius: $match-item-border-radius * 2;
  }

  .match-item,
  .back-item {
    border-radius: $match-item-border-radius * 2;
  }

  .match-item {
    font-size: $icon-size * 2;
  }
}

/* Large devices (laptops/desktops, 992px and up) */
@media only screen and (min-width: 992px) {
  .match-item-container {
    width: $match-item-size * 2.5;
    height: $match-item-size * 2.5;
    border-radius: $match-item-border-radius * 2.5;
  }

  .match-item,
  .back-item {
    border-radius: $match-item-border-radius * 2.5;
  }

  .match-item {
    font-size: $icon-size * 2.5;
  }
}

/* Extra large devices (large laptops and desktops, 1200px and up) */
@media only screen and (min-width: 1200px) {
  .board {
    max-width: 1200px;
  }

  .match-item-container {
    width: $match-item-size * 3;
    height: $match-item-size * 3;
    border-radius: $match-item-border-radius * 3;
  }

  .match-item,
  .back-item {
    border-radius: $match-item-border-radius * 3;
  }

  .match-item {
    font-size: $icon-size * 3;
  }
}

$screen-sizes: 600px 768px 992px 1200px;
$multipliers: 1.5 2 2.5 3;

@for $i from 1 through 4 {
  @media only screen and (min-width: nth($screen-sizes, $i)) {
    .board {
      row-gap: $row-gap * nth($multipliers, $i);
      margin-top: $board-margin-top * nth($multipliers, $i);
    }

    .match-item-container {
      width: $match-item-size * nth($multipliers, $i);
      height: $match-item-size * nth($multipliers, $i);
      border-radius: $match-item-border-radius * nth($multipliers, $i);
    }

    .match-item,
    .back-item {
      border-radius: $match-item-border-radius * nth($multipliers, $i);
    }

    .match-item {
      font-size: $icon-size * nth($multipliers, $i);
    }
  }
}
